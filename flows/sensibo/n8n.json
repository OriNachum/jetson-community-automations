{
  "name": "Sensibo",
  "nodes": [
    {
      "parameters": {
        "url": "https://home.sensibo.com/api/v2/users/me/pods",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        512,
        208
      ],
      "id": "3d9dda35-ee72-4842-bab8-200fd87c9dc7",
      "name": "HTTP Request1",
      "credentials": {
        "httpBearerAuth": {
          "id": "WvJ4TX9GjhRjgZGi",
          "name": "Sensibo"
        },
        "httpQueryAuth": {
          "id": "RESQrrH2HgFXOntQ",
          "name": "Query Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://home.sensibo.com/api/v2/pods/8DdxNuyc/acStates",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        320,
        0
      ],
      "id": "808d942e-1ed2-4beb-9a37-d495db3aad7e",
      "name": "Get States",
      "credentials": {
        "httpBearerAuth": {
          "id": "WvJ4TX9GjhRjgZGi",
          "name": "Sensibo"
        },
        "httpQueryAuth": {
          "id": "RESQrrH2HgFXOntQ",
          "name": "Query Auth account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://home.sensibo.com/api/v2/pods/8DdxNuyc/measurements",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        96,
        0
      ],
      "id": "7c41ffc9-8205-4cb0-8b6e-df34116ce054",
      "name": "Get neasurements",
      "credentials": {
        "httpBearerAuth": {
          "id": "WvJ4TX9GjhRjgZGi",
          "name": "Sensibo"
        },
        "httpQueryAuth": {
          "id": "RESQrrH2HgFXOntQ",
          "name": "Query Auth account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "*/5 0-7 * * *"
            },
            {
              "field": "cronExpression",
              "expression": "*/5 23 * * *"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -160,
        0
      ],
      "id": "2dd96b8d-16ee-46fb-9e82-128363bd1f92",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "sendTo": "email@provider,
        "subject": "Sensibo status",
        "message": "=on: {{ $json.message.content['on'] }}\non: {{ $json.message.content['mode'] }}\non: {{ $json.message.content['targetTemperature'] }}\n---\n\nReasoning: {{ $json.message.content['thinking'] }}\n---\nLast state: {{ JSON.stringify($('Get States').item.json.result[0]) }}\n\nLast measurements: {{ JSON.stringify($('Get neasurements').item.json.result) }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1200,
        -16
      ],
      "id": "3c523806-4fbe-47ae-84ba-14aa8e2888bd",
      "name": "Send a message",
      "webhookId": "8206fade-7f1c-426b-9c1b-1942a0ca99e6",
      "credentials": {
        "gmailOAuth2": {
          "id": "LiHwZPyL61gVFpCG",
          "name": "Gmail sensibo"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "GPT-5-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "You are my AC manager. Look at the history of my AC measurements at Sensibo and decide if I should enable it or disable it.\n\nConsider the time, and that it is our sleep time - so take our health into consideration.\nAlso, too hot or too cold (Or too humid) could wake us up and is not healthy.\n29 is comfortable, 48% is great, above 51% it is humid.\ndue central AC, too much balance on stats measured in livingroom is cold on the other sleep rooms. \n\nAlso, using 26 targetTemperature was needed to make it actually work when it was 30.3 degrees.\n\nUse fan mode before turning off, to circulate the air.\nAfter 5 minutes (300 seconds) if fan mode - turn off the ac for a break.\n\nResponse in json: { \"thinking\": \"...\", \"on\": true/false, \"mode\":\"dry/fan\",\n\"targetTemperature\": ## }",
              "role": "system"
            },
            {
              "content": "=States:\n{{ JSON.stringify($('Get States').item.json.result) }} \n\nMeasurements:\n{{ JSON.stringify($('Get neasurements').item.json.result) }}\n\n\nTime: \n{{  $('Schedule Trigger').item.json.timestamp }}\n\nRemember,my target is ~45%.\nThis is central AC unit.\n\nResponse in json: { \"thinking\": \"...\", \"on\": true/false, \"mode\":\"dry/fan\",\n\"targetTemperature\": ## }",
              "role": "=user"
            }
          ]
        },
        "jsonOutput": true,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        848,
        -16
      ],
      "id": "d8e6d232-daaa-4fb0-87cd-854bac8a811c",
      "name": "Message a model",
      "credentials": {
        "openAiApi": {
          "id": "wHkZEIyH56DeQIZR",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "ad57b76a-3d01-49a8-b9e7-9d07c97979ab",
              "leftValue": "={{ $('Message a model').item.json.message.content['on'] }}",
              "rightValue": "={{ $('Get States').item.json.result[0].acState.on }}",
              "operator": {
                "type": "boolean",
                "operation": "notEquals"
              }
            },
            {
              "id": "cb8efc18-7791-4cb2-b0d5-4629f00cccf4",
              "leftValue": "={{ $('Message a model').item.json.message.content['mode'] }}",
              "rightValue": "={{ $('Get States').item.json.result[0].acState.mode }}",
              "operator": {
                "type": "string",
                "operation": "notEquals"
              }
            },
            {
              "id": "6ac1d012-9162-4ef7-ac21-fd23e8ae6fa8",
              "leftValue": "={{ $('Message a model').item.json.message.content['targetTemperature'] }}",
              "rightValue": "={{ $('Get States').item.json.result[0].acState.targetTemperature }}",
              "operator": {
                "type": "number",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1344,
        -16
      ],
      "id": "93698547-f726-4477-bec0-cd5f78f69145",
      "name": "If"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://home.sensibo.com/api/v2/pods/8DdxNuyc/acStates",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpQueryAuth",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"acState\": {\n    \"on\": {{ $('Message a model').item.json.message.content['on'] }},\n    \"targetTemperature\": {{ $('Message a model').item.json.message.content['targetTemperature'] }},\n    \"temperatureUnit\": \"{{ $('Get States').item.json.result[1].acState.temperatureUnit }}\",\n\n    \"mode\": \"{{ $('Message a model').item.json.message.content['mode'] }}\"\n\n\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1600,
        -32
      ],
      "id": "07e65bb6-d266-45e3-aa3f-0dc76073ce9c",
      "name": "Change state",
      "credentials": {
        "httpBearerAuth": {
          "id": "WvJ4TX9GjhRjgZGi",
          "name": "Sensibo"
        },
        "httpQueryAuth": {
          "id": "RESQrrH2HgFXOntQ",
          "name": "Query Auth account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "f9e5c69f-4220-476e-8dc5-13cd3dabe7c2",
              "leftValue": "=1200",
              "rightValue": "={{ $json.result[0].time.secondsAgo }}",
              "operator": {
                "type": "number",
                "operation": "lt"
              }
            },
            {
              "id": "9b982503-74db-4c57-b5ab-997168024e24",
              "leftValue": "={{ $json.result[0].acState.on }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        528,
        0
      ],
      "id": "45743569-6cb0-42d2-b378-18aa3987cbe5",
      "name": "If1"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "9b982503-74db-4c57-b5ab-997168024e24",
              "leftValue": "={{ $json.result[0].acState.on }}",
              "rightValue": false,
              "operator": {
                "type": "boolean",
                "operation": "notEquals"
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        688,
        80
      ],
      "id": "79df7077-4c3d-4ee6-873f-6e33c17d4865",
      "name": "If2"
    }
  ],
  "pinData": {},
  "connections": {
    "Get neasurements": {
      "main": [
        [
          {
            "node": "Get States",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get neasurements",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get States": {
      "main": [
        [
          {
            "node": "If1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Message a model": {
      "main": [
        [
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a message": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Change state",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Change state": {
      "main": [
        []
      ]
    },
    "If1": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "If2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If2": {
      "main": [
        [
          {
            "node": "Message a model",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1",
    "timezone": "Asia/Jerusalem",
    "callerPolicy": "workflowsFromSameOwner"
  },
  "versionId": "8002997a-5eb0-4ae2-9840-9988fb02b130",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b15b82af704de20c88bc54a570c480485c50218e789e219510a93187a4e3d613"
  },
  "id": "8UVc74pez8Uy7KZY",
  "tags": []
}
